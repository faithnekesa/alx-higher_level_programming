Module: '1-my_list.py'

Usage: This module defines a function; print_sorted(self): that prints the list,
but sorted (ascending sort)

Function importation from the module:
	 >>> my_list = __import__("1-my_list.py").my_list

Validate module docstring:
	 >>> m = __import__("1-my_list.py").__doc__
	 >>> len(m) > 1
	 True

Validate function docstring:
	 >>> f = __import__("1-my_list.py").my_list.__doc__
         >>> len(f) > 1
         True

Validate common case
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

Validate when empty list is passed
>>> a = []
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[]

Validate object passed not defined
>>> MyList = __import__('1-my_list').MyList
>>> my_list2.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'my_list2' is not defined

Validate when unique number is passed
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.print_sorted()
[1]
>>> print(my_list)
[1]

Validate list passed
>>> a = [1, 9, 4]
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[1, 4, 9]

Validate negative numbers passed
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.append(-1)
>>> my_list.append(3)
>>> my_list.append(-2)
>>> my_list.print_sorted()
[-2, -1, 1, 2, 3]

Validate when same number is passed consecutively
>>> my_list2 = MyList()
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.print_sorted()
[1, 1, 1, 1]

Validate parent object
>>> my_list = [1, 2, 3]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'print_sorted'



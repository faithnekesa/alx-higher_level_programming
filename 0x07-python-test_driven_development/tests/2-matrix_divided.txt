Module: '2-matrix_divided'

Usage: This module defines a function that divides all elements of a matrix.
	 : It returns a new matrix which is a copy of 'matrix' where all elements are divided by 'div'

Function importation from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Validate module docstring:
	 >>> m = __import__("2-matrix_divided").__doc__
	 >>> len(m) > 1
	 True

Validate function docstring:
	 >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
         >>> len(f) > 1
         True

Validate matrix with mixed list and non-list items:
	 >>> matrix = [[1, 2, 3], "Hello world"]
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last ):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats
		 
Validate matrix as list:
	 >>> matrix = "Hello world"
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Validate a mix of ints, floats, and non-number type:
         >>> matrix = [[1, "A", 3], [1.1, 5, 2.5]]
         >>> matrix_divided(matrix, 11)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Validate a mix of integers, floats, and boolean values:
	 >>> matrix = [[1, True, 3], [False, 5, 2.5]]
         >>> matrix_divided(matrix, 11)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Validate uneven matrix:
	 >>> matrix = [[1, 2, 3, 4], [4, 5, 6]]
	 >>> matrix_divided(matrix, 3)
	 Traceback (most recent call last):
         ...
	 TypeError: Each row of the matrix must have the same size

Validate mix of ints, floats, and tuple:
         >>> matrix = [[1, (1,), 3], [4, 5, 6.8]]
         >>> matrix_divided(matrix, 11)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Validate div as non-number:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, "A")
	 Traceback (most recent call last):
         ...
         TypeError: div must be a number

Validate division by zero:
	 >>> matrix_divided(matrix, 0)
	 Traceback (most recent call last):
	 ...
	 ZeroDivisionError: division by zero
	 
Validate div as bool:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
         >>> matrix_divided(matrix, True)
         Traceback (most recent call last):
         ...
         TypeError: div must be a number

Validate regular division:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, 3)
	 [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	 >>> matrix
	 [[1, 2, 3], [4, 5, 6]]

Validate div as float:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, 4.5)
	 [[0.22, 0.44, 0.67], [0.89, 1.11, 1.33]]
	 >>> matrix
	 [[1, 2, 3], [4, 5, 6]]

Validate mix of ints and floats:
	 >>> matrix = [[1, 2.4, 3], [4.1, 5, 6.8]]
	 >>> matrix_divided(matrix, 11)
	 [[0.09, 0.22, 0.27], [0.37, 0.45, 0.62]]
	 >>> matrix
	 [[1, 2.4, 3], [4.1, 5, 6.8]]

Validate div as negative:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
         >>> matrix_divided(matrix, -3)
         [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
         >>> matrix
         [[1, 2, 3], [4, 5, 6]]
		 
Validate negative numerators:
	 >>> matrix = [[-1, -2, -3], [-4, -5, -6]]
	 >>> matrix_divided(matrix, 3)
	 [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
         >>> matrix
         [[-1, -2, -3], [-4, -5, -6]]

Validate empty matrix:
	 >>> matrix = []
	 >>> matrix_divided(matrix, 1)
	 []
	 >>> matrix
	 []

Validate nx1 matrix:
	 >>> matrix = [[1], [2], [3]]
	 >>> matrix_divided(matrix, 2)
	 [[0.5], [1.0], [1.5]]
	 >>> matrix
	 [[1], [2], [3]]
	 
Validate 1xn matrix:
	 >>> matrix = [[1, 2, 3]]
	 >>> matrix_divided(matrix, 2)
	 [[0.5, 1.0, 1.5]]
	 >>> matrix
	 [[1, 2, 3]]

Validate division by infinity:
	 >>> matrix_divided(matrix, float('inf'))
	 [[0.0], [0.0], [0.0]]

Validate division with infinity in numerator and denomenator
	 >>> matrix_divided(matrix, float('inf'))
	 [[0.0, nan, 0.0], [0.0, 0.0, 0.0]]
	 
Validate division with infinity in numerator:
	 >>> matrix = [[1, float('inf'), 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, 1)
         [[1.0, inf, 3.0], [4.0, 5.0, 6.0]]

Validate no args:
	 >>> matrix_divided()
         Traceback (most recent call last):
         ...
         TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Validate 1 arg:
	 >>> matrix_divided(matrix)
	 Traceback (most recent call last):
	 ...
    	 TypeError: matrix_divided() missing 1 required positional argument: 'div'

Validate more than 2 args:
	 >>> matrix_divided(matrix, 1, 3)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() takes 2 positional arguments but 3 were given
